{
  "openapi": "3.0.0",
  "info": {
    "title": "RenteX Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "vinisco@hotmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "description": "Create a new user",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "driver_license": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "User sample",
                "password": "Password sample",
                "driver_license": "123123",
                "email": "user@sample.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "User already exists"
          }
        }
      }
    },

    "/session": {
      "post": {
        "tags": ["User"],
        "summary": "Authenticate a user",
        "description": "Authenticate a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "admin",
                  "email": "admin@rentx.com.br"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User Authenticate"
          },
          "400": {
            "description": "Email or password incorrect"
          }
        }
      }
    },

    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Category name sample",
                "description": "Description of the category sample"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": ["Category"],
        "summary": "Upload a new category",
        "description": "Upload a new category",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },

    "/specifications": {
      "post": {
        "tags": ["Specification"],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Specification name sample",
                "description": "Description of the specification sample"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Specification already exists"
          }
        }
      },
      "get": {
        "tags": ["Specification"],
        "summary": "List specifications",
        "description": "List all specifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/cars": {
      "post": {
        "tags": ["Car"],
        "summary": "Create a car",
        "description": "Create a new car",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "daily_rate": {
                    "type": "number"
                  },
                  "license_plate": {
                    "type": "string"
                  },
                  "fine_amount": {
                    "type": "number"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Car name sample",
                "description": "Description sample",
                "daily_rate": 100,
                "license_plate": "License plate sample",
                "fine_amount": 100,
                "brand": "Brand sample",
                "category_id": "category_id sample"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Car already exists"
          }
        }
      }
    },
    "/cars/available": {
      "get": {
        "tags": ["Car"],
        "summary": "List available cars",
        "description": "List all available cars",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "daily_rate": {
                        "type": "number"
                      },
                      "license_plate": {
                        "type": "string"
                      },
                      "fine_amount": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "category_id": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "Date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/specifications/{id}": {
      "post": {
        "tags": ["Car"],
        "summary": "Post car specifications",
        "description": "List all available cars",
        "security": [{ "bearerAuth": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specifications_id": {
                    "type": "array"
                  }
                }
              },
              "example": {
                "specifications_id": [
                  "specification_id 1",
                  "specification_id 2"
                ]
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "daily_rate": {
                        "type": "number"
                      },
                      "license_plate": {
                        "type": "string"
                      },
                      "fine_amount": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "category_id": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "Date"
                      },
                      "specifications": {
                        "type": "array"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/images/{id}": {
      "post": {
        "tags": ["Car"],
        "summary": "Upload car images",
        "description": "Upload car images",
        "security": [{ "bearerAuth": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "example": {
              "specifications_id": ["specification_id 1", "specification_id 2"]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },

    "/rentals": {
      "post": {
        "tags": ["Rental"],
        "summary": "Rent a car",
        "description": "Rent a car",
        "security": [{ "bearerAuth": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expected_return_date": {
                    "type": "Date"
                  },
                  "car_id": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "expected_return_date": "2022-03-10T15:00:24.295Z",
                "car_id": "car_id sample"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Car is unavailable / There maximum expected return date is 24 hours / There is a rental in progress for this user "
          }
        }
      },
      "get": {
        "tags": ["Rental"],
        "summary": "List rentals by user",
        "description": "Rent a car",
        "security": [{ "bearerAuth": {} }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "car_id": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "start_date": {
                        "type": "Date"
                      },
                      "end_date": {
                        "type": "Date"
                      },
                      "total": {
                        "type": "string"
                      },
                      "expected_return_date": {
                        "type": "Date"
                      },
                      "created_at": {
                        "type": "Date"
                      },
                      "updated_at": {
                        "type": "array"
                      },
                      "car": {
                        "type": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals/devolution/{id}": {
      "post": {
        "tags": ["Rental"],
        "summary": "Rent a car",
        "description": "Rent a car",
        "security": [{ "bearerAuth": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Rental does not exist / This rental belongs to another user / Rental is already finished "
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
